--SELECT first_name, last_name, email FROM customer;

--SELECT * FROM customer;

--SELECT first_name || ' ' || last_name, email FROM customer;
--^^ returns first + last name separated by a space, and email

--SELECT 5 * 3;

--SELECT
--	first_name,
--	last_name AS surname
--FROM customer;

--SELECT
--	first_name || ' ' || last_name AS "full name"
--FROM
--	customer;

--SELECT
--	first_name,
--	last_name
--FROM
--	customer
--ORDER BY
--	first_name ASC --DESC

--SELECT
--	first_name,
--	last_name
--FROM
--	customer
--ORDER BY
--	first_name ASC,
--	last_name DESC

--SELECT
--	first_name,
--	LENGTH(first_name) len
--FROM
--	customer
--ORDER BY
--	len DESC;

--CREATE TABLE sort_demo(
--	num INT
--);

--INSERT INTO sort_demo(num)
--VALUES(1),(2),(3),(null);

--SELECT num
--FROM sort_demo
--ORDER BY num;

--SELECT num
--FROM sort_demo
--ORDER BY num DESC;

--SELECT num
--FROM sort_demo
--ORDER BY num DESC NULLS LAST;

--CREATE TABLE distinct_demo (
--	id serial NOT NULL PRIMARY KEY,
--	bcolor VARCHAR,
--	fcolor VARCHAR
--);
--INSERT INTO distinct_demo (bcolor, fcolor)
--VALUES
--	('red', 'red'),
--	('red', 'red'),
--	('red', NULL),
--	(NULL, 'red'),
--	('red', 'green'),
--	('red', 'blue'),
--	('green', 'red'),
--	('green', 'blue'),
--	('green', 'green'),
--	('blue', 'red'),
--	('blue', 'green'),
--	('blue', 'blue');
--SELECT
--	id,
--	bcolor,
--	fcolor
--FROM
--	distinct_demo;
	
--SELECT
--	DISTINCT bcolor
--FROM
--	distinct_demo
--ORDER BY
--	bcolor;

--SELECT
--	DISTINCT bcolor,
--	fcolor
--FROM
--	distinct_demo
--ORDER BY
--	bcolor,
--	fcolor;

--SELECT
--	DISTINCT ON (bcolor) bcolor,
--	fcolor
--FROM
--	distinct_demo
--ORDER BY
--	bcolor,
--	fcolor;

--SELECT
--	last_name,
--	first_name
--FROM
--	customer
--WHERE
--	first_name = 'Jamie';

--SELECT
--	last_name,
--	first_name
--FROM
--	customer
--WHERE
--	first_name = 'Jamie' AND
--	last_name = 'Rice';

--SELECT
--	last_name,
--	first_name
--FROM
--	customer
--WHERE
--	first_name = 'Adam' OR
--	last_name = 'Rodriguez';

--SELECT
--	first_name,
--	last_name
--FROM
--	customer
--WHERE
--	first_name IN ('Ann', 'Anne', 'Annie');

--SELECT
--	first_name,
--	last_name
--FROM
--	customer
--WHERE
--	first_name IN ('Ann', 'Anne', 'Annie');
	
--SELECT
--	first_name,
--	last_name
--FROM
--	customer
--WHERE
--	first_name LIKE 'Ann%';

--SELECT
--	first_name,
--	LENGTH(first_name) name_length
--FROM
--	customer
--WHERE
--	first_name LIKE 'A%' AND
--	LENGTH(first_name) BETWEEN 3 AND 5
--ORDER BY
--	name_length;

--SELECT
--	first_name,
--	last_name
--FROM
--	customer
--WHERE
--	first_name LIKE 'Bra%' AND
--	last_name <> 'Motley'; --!= is same as <>

--SELECT
--	film_id,
--	title,
--	release_year
--FROM
--	film
--ORDER BY
--	film_id
--LIMIT 5;

--SELECT
--	film_id,
--	title,
--	release_year
--FROM
--	film
--ORDER BY
--	film_id
--LIMIT 4 OFFSET 3;

--SELECT
--	film_id,
--	title,
--	rental_rate
--FROM
--	film
--ORDER BY
--	rental_rate DESC
--LIMIT 10;

--SELECT 
--	film_id,
--	title
--FROM
--	film
--ORDER BY
--	title
--FETCH FIRST ROW ONLY;

--SELECT
--    film_id,
--    title
--FROM
--    film
--ORDER BY
--    title 
--FETCH FIRST 5 ROW ONLY;

--SELECT
--	film_id,
--	title
--FROM
--	film
--ORDER BY
--	title
--OFFSET 5 ROWS
--FETCH FIRST 5 ROW ONLY;

--SELECT customer_id,
--	rental_id,
--	return_date
--FROM
--	rental
--WHERE
--	customer_id IN (1, 2)
--ORDER BY
--	return_date DESC;

--SELECT rental_id,
--	customer_id,
--	return_date
--FROM
--	rental
--WHERE
--	customer_id = 1 OR customer_id = 2
--ORDER BY
--	return_date DESC;

--SELECT customer_id,
--	rental_id,
--	return_date
--FROM
--	rental
--WHERE
--	customer_id NOT IN (1, 2)

--SELECT
--	customer_id,
--	rental_id,
--	return_date
--FROM
--	rental
--WHERE
--	customer_id <> 1
--AND customer_id <> 2;

--SELECT customer_id
--FROM rental
--WHERE CAST (return_date AS DATE) = '2005-05-27'
--ORDER BY customer_id;

--SELECT
--	customer_id,
--	first_name,
--	last_name
--FROM
--	customer
--WHERE
--	customer_id IN (
--		SELECT customer_id
--		FROM rental
--		WHERE CAST (return_date AS DATE) = '2005-05-27'
--	)
--ORDER BY customer_id;

--SELECT
--	customer_id,
--	payment_id,
--	amount
--FROM
--	payment
--WHERE
--	amount BETWEEN 8 AND 9;

SELECT
	customer_id,
	payment_id,
	amount
FROM
	payment
WHERE
	amount NOT BETWEEN 8 AND 9;